{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      board: [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]],\n      currentPlayer: \"X\",\n      message: \"\",\n      apiBaseUrl: \"http://127.0.0.1:3000\" // Cambia a la URL de tu API\n    };\n  },\n\n  methods: {\n    makeMove(row, col) {\n      if (this.board[row][col] === \"\" && !this.isGameOver()) {\n        axios.post(`${this.apiBaseUrl}/makeMove`, {\n          row,\n          col\n        }).then(response => {\n          if (response.data.success) {\n            this.board[row][col] = this.currentPlayer;\n            if (this.checkWinner(row, col)) {\n              this.message = `¡El jugador ${this.currentPlayer} ha ganado!`;\n            } else if (this.isBoardFull()) {\n              this.message = \"¡Es un empate!\";\n            } else {\n              this.currentPlayer = this.currentPlayer === \"X\" ? \"O\" : \"X\";\n            }\n          } else {\n            console.error(response.data.error);\n          }\n        }).catch(error => {\n          console.error(error);\n          // Agregar manejo de errores adicional según sea necesario\n        });\n      }\n    },\n\n    checkWinner(row, col) {\n      const player = this.currentPlayer;\n      return this.checkRow(row, player) || this.checkColumn(col, player) || this.checkDiagonals(player);\n    },\n    checkRow(row, player) {\n      for (let i = 0; i < 3; i++) {\n        if (this.board[row][i] !== player) {\n          return false;\n        }\n      }\n      return true;\n    },\n    checkColumn(col, player) {\n      for (let i = 0; i < 3; i++) {\n        if (this.board[i][col] !== player) {\n          return false;\n        }\n      }\n      return true;\n    },\n    checkDiagonals(player) {\n      return this.board[0][0] === player && this.board[1][1] === player && this.board[2][2] === player || this.board[0][2] === player && this.board[1][1] === player && this.board[2][0] === player;\n    },\n    isBoardFull() {\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          if (this.board[i][j] === \"\") {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n    isGameOver() {\n      return this.message !== \"\";\n    },\n    startNewGame() {\n      axios.post(`${this.apiBaseUrl}/resetGame`).then(response => {\n        if (response.data.success) {\n          // Reiniciar el juego en el frontend\n          this.board = [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]];\n          this.currentPlayer = \"X\";\n          this.message = \"\";\n        } else {\n          console.error(\"Error al reiniciar el juego\");\n        }\n      }).catch(error => {\n        console.error(error);\n        // Agregar manejo de errores adicional según sea necesario\n      });\n    },\n\n    startGame() {\n      axios.post(`${this.apiBaseUrl}/createGame`).then(response => {\n        if (response.data.success) {\n          // Reiniciar el juego en el frontend\n          this.board = [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]];\n          this.currentPlayer = \"X\";\n          this.message = \"\";\n        } else {\n          console.error(\"Error al reiniciar el juego\");\n        }\n      }).catch(error => {\n        console.error(error);\n        // Agregar manejo de errores adicional según sea necesario\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","board","currentPlayer","message","apiBaseUrl","methods","makeMove","row","col","isGameOver","post","then","response","success","checkWinner","isBoardFull","console","error","catch","player","checkRow","checkColumn","checkDiagonals","i","j","startNewGame","startGame"],"sources":["C:\\Users\\sherl\\Gato-Front\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <h1>Tic Tac Toe</h1>\r\n    <div class=\"board\">\r\n      <div v-for=\"(row, rowIndex) in board\" :key=\"rowIndex\" class=\"row\">\r\n        <div\r\n          v-for=\"(cell, colIndex) in row\"\r\n          :key=\"colIndex\"\r\n          class=\"cell\"\r\n          @click=\"makeMove(rowIndex, colIndex)\"\r\n        >\r\n          {{ cell }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"message\">\r\n      <p>{{ message }}</p>\r\n\r\n      <button @click=\"startNewGame\">Reiniciar</button>\r\n      <div style=\"margin-top: 10px;\"></div>\r\n      <button @click=\"startGame\">Nuevo juego</button>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      board: [\r\n        [\"\", \"\", \"\"],\r\n        [\"\", \"\", \"\"],\r\n        [\"\", \"\", \"\"],\r\n      ],\r\n      currentPlayer: \"X\",\r\n      message: \"\",\r\n      apiBaseUrl: \"http://127.0.0.1:3000\", // Cambia a la URL de tu API\r\n    };\r\n  },\r\n  methods: {\r\n    makeMove(row, col) {\r\n      if (this.board[row][col] === \"\" && !this.isGameOver()) {\r\n        axios\r\n          .post(`${this.apiBaseUrl}/makeMove`, { row, col })\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              this.board[row][col] = this.currentPlayer;\r\n              if (this.checkWinner(row, col)) {\r\n                this.message = `¡El jugador ${this.currentPlayer} ha ganado!`;\r\n              } else if (this.isBoardFull()) {\r\n                this.message = \"¡Es un empate!\";\r\n              } else {\r\n                this.currentPlayer = this.currentPlayer === \"X\" ? \"O\" : \"X\";\r\n              }\r\n            } else {\r\n              console.error(response.data.error);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n            // Agregar manejo de errores adicional según sea necesario\r\n          });\r\n      }\r\n    },\r\n    checkWinner(row, col) {\r\n      const player = this.currentPlayer;\r\n      return (\r\n        this.checkRow(row, player) ||\r\n        this.checkColumn(col, player) ||\r\n        this.checkDiagonals(player)\r\n      );\r\n    },\r\n    checkRow(row, player) {\r\n      for (let i = 0; i < 3; i++) {\r\n        if (this.board[row][i] !== player) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    checkColumn(col, player) {\r\n      for (let i = 0; i < 3; i++) {\r\n        if (this.board[i][col] !== player) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    checkDiagonals(player) {\r\n      return (\r\n        (this.board[0][0] === player &&\r\n          this.board[1][1] === player &&\r\n          this.board[2][2] === player) ||\r\n        (this.board[0][2] === player &&\r\n          this.board[1][1] === player &&\r\n          this.board[2][0] === player)\r\n      );\r\n    },\r\n    isBoardFull() {\r\n      for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n          if (this.board[i][j] === \"\") {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    isGameOver() {\r\n      return this.message !== \"\";\r\n    },\r\n    startNewGame() {\r\n      axios\r\n        .post(`${this.apiBaseUrl}/resetGame`)\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            // Reiniciar el juego en el frontend\r\n            this.board = [\r\n              [\"\", \"\", \"\"],\r\n              [\"\", \"\", \"\"],\r\n              [\"\", \"\", \"\"],\r\n            ];\r\n            this.currentPlayer = \"X\";\r\n            this.message = \"\";\r\n          } else {\r\n            console.error(\"Error al reiniciar el juego\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          // Agregar manejo de errores adicional según sea necesario\r\n        });\r\n    },\r\n\r\n    startGame(){\r\n      axios\r\n        .post(`${this.apiBaseUrl}/createGame`)\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            // Reiniciar el juego en el frontend\r\n            this.board = [\r\n              [\"\", \"\", \"\"],\r\n              [\"\", \"\", \"\"],\r\n              [\"\", \"\", \"\"],\r\n            ];\r\n            this.currentPlayer = \"X\";\r\n            this.message = \"\";\r\n          } else {\r\n            console.error(\"Error al reiniciar el juego\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          // Agregar manejo de errores adicional según sea necesario\r\n        });\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#app {\r\n  text-align: center;\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  margin-top: 30px;\r\n}\r\n\r\n.board {\r\n  display: inline-block;\r\n  border: 2px solid #333;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n}\r\n\r\n.cell {\r\n  width: 100px;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 2em;\r\n  cursor: pointer;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.message {\r\n  margin-top: 20px;\r\n  font-size: 1.5em;\r\n}\r\n\r\nbutton {\r\n  font-size: 1em;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n  transition: background-color 0.3s ease; /* Agregado para efecto de transición */\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}