{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      board: [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]],\n      currentPlayer: \"X\",\n      message: \"\",\n      apiBaseUrl: \"https://0h2kov0us3.execute-api.us-east-1.amazonaws.com/game\",\n      currentGameId: null\n    };\n  },\n  methods: {\n    makeMove(row, col) {\n      if (this.currentGameId && this.board[row][col] === \"\" && !this.isGameOver()) {\n        axios.post(`${this.apiBaseUrl}/makeMove/${this.currentGameId}`, {\n          row,\n          col\n        }).then(response => {\n          if (response.data.success) {\n            this.board[row][col] = this.currentPlayer;\n            if (this.checkWinner(row, col)) {\n              this.message = `¡El jugador ${this.currentPlayer} ha ganado!`;\n            } else if (this.isBoardFull()) {\n              this.message = \"¡Es un empate!\";\n            } else {\n              this.currentPlayer = this.currentPlayer === \"X\" ? \"O\" : \"X\";\n            }\n          } else {\n            console.error(response.data.error);\n          }\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    },\n    startGame() {\n      axios.put(`${this.apiBaseUrl}/game`).then(response => {\n        if (response.data.success) {\n          // Debes asignar el ID del juego aquí\n          this.currentGameId = response.data.gameId;\n          this.board = [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]];\n          this.currentPlayer = \"X\";\n          this.message = \"\";\n        } else {\n          console.error(\"Error al iniciar el juego\");\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    startNewGame() {\n      if (this.currentGameId) {\n        // Verifica que tengas un juego en curso\n        axios.put(`${this.apiBaseUrl}/resetGame/${this.currentGameId}`).then(response => {\n          if (response.data.success) {\n            // Reinicia el juego en el frontend\n            this.board = [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]];\n            this.currentPlayer = \"X\";\n            this.message = \"\";\n          } else {\n            console.error(\"Error al reiniciar el juego\");\n          }\n        }).catch(error => {\n          console.error(error);\n          // Agregar manejo de errores adicional según sea necesario\n        });\n      }\n    }\n\n    // Resto del código, incluyendo startGame y startNewGame, se mantiene igual.\n  }\n};","map":{"version":3,"names":["axios","data","board","currentPlayer","message","apiBaseUrl","currentGameId","methods","makeMove","row","col","isGameOver","post","then","response","success","checkWinner","isBoardFull","console","error","catch","startGame","put","gameId","startNewGame"],"sources":["C:\\Users\\sherl\\Gato-Front\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <h1>Tic Tac Toe</h1>\r\n    <div class=\"board\">\r\n      <div v-for=\"(row, rowIndex) in board\" :key=\"rowIndex\" class=\"row\">\r\n        <div\r\n          v-for=\"(cell, colIndex) in row\"\r\n          :key=\"colIndex\"\r\n          class=\"cell\"\r\n          @click=\"makeMove(rowIndex, colIndex)\"\r\n        >\r\n          {{ cell }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"message\">\r\n      <p>{{ message }}</p>\r\n      <button @click=\"startNewGame\">Reiniciar</button>\r\n      <div style=\"margin-top: 10px\"></div>\r\n      <button @click=\"startGame\">Nuevo juego</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      board: [\r\n        [\"\", \"\", \"\"],\r\n        [\"\", \"\", \"\"],\r\n        [\"\", \"\", \"\"],\r\n      ],\r\n      currentPlayer: \"X\",\r\n      message: \"\",\r\n      apiBaseUrl: \"https://0h2kov0us3.execute-api.us-east-1.amazonaws.com/game\",\r\n      currentGameId: null,\r\n    };\r\n  },\r\n  methods: {\r\n    makeMove(row, col) {\r\n      if (\r\n        this.currentGameId &&\r\n        this.board[row][col] === \"\" &&\r\n        !this.isGameOver()\r\n      ) {\r\n        axios\r\n          .post(`${this.apiBaseUrl}/makeMove/${this.currentGameId}`, {\r\n            row,\r\n            col,\r\n          })\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              this.board[row][col] = this.currentPlayer;\r\n              if (this.checkWinner(row, col)) {\r\n                this.message = `¡El jugador ${this.currentPlayer} ha ganado!`;\r\n              } else if (this.isBoardFull()) {\r\n                this.message = \"¡Es un empate!\";\r\n              } else {\r\n                this.currentPlayer = this.currentPlayer === \"X\" ? \"O\" : \"X\";\r\n              }\r\n            } else {\r\n              console.error(response.data.error);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      }\r\n    },\r\n    startGame() {\r\n      axios\r\n        .put(`${this.apiBaseUrl}/game`)\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            // Debes asignar el ID del juego aquí\r\n            this.currentGameId = response.data.gameId;\r\n\r\n            this.board = [\r\n              [\"\", \"\", \"\"],\r\n              [\"\", \"\", \"\"],\r\n              [\"\", \"\", \"\"],\r\n            ];\r\n            this.currentPlayer = \"X\";\r\n            this.message = \"\";\r\n          } else {\r\n            console.error(\"Error al iniciar el juego\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    startNewGame() {\r\n      if (this.currentGameId) {\r\n        // Verifica que tengas un juego en curso\r\n        axios\r\n          .put(`${this.apiBaseUrl}/resetGame/${this.currentGameId}`)\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              // Reinicia el juego en el frontend\r\n              this.board = [\r\n                [\"\", \"\", \"\"],\r\n                [\"\", \"\", \"\"],\r\n                [\"\", \"\", \"\"],\r\n              ];\r\n              this.currentPlayer = \"X\";\r\n              this.message = \"\";\r\n            } else {\r\n              console.error(\"Error al reiniciar el juego\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n            // Agregar manejo de errores adicional según sea necesario\r\n          });\r\n      }\r\n    },\r\n\r\n    // Resto del código, incluyendo startGame y startNewGame, se mantiene igual.\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#app {\r\n  text-align: center;\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  margin-top: 30px;\r\n}\r\n\r\n.board {\r\n  display: inline-block;\r\n  border: 2px solid #333;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n}\r\n\r\n.cell {\r\n  width: 100px;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 2em;\r\n  cursor: pointer;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.message {\r\n  margin-top: 20px;\r\n  font-size: 1.5em;\r\n}\r\n\r\nbutton {\r\n  font-size: 1em;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n  transition: background-color 0.3s ease; /* Agregado para efecto de transición */\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}