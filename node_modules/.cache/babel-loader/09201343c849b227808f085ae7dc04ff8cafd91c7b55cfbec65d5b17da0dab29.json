{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Tic Tac Toe\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"board\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  class: \"message\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"margin-top\": \"10px\"\n  }\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.board, (row, rowIndex) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: rowIndex,\n      class: \"row\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (cell, colIndex) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: colIndex,\n        class: \"cell\",\n        onClick: $event => $options.makeMove(rowIndex, colIndex)\n      }, _toDisplayString(cell), 9 /* TEXT, PROPS */, _hoisted_4);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, _toDisplayString($data.message), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startNewGame && $options.startNewGame(...args))\n  }, \"Reiniciar\"), _hoisted_6, _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.startGame && $options.startGame(...args))\n  }, \"Nuevo juego\")])]);\n}","map":{"version":3,"names":["id","_createElementVNode","class","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","board","row","rowIndex","key","cell","colIndex","onClick","$event","$options","makeMove","_hoisted_4","_hoisted_5","_toDisplayString","message","_cache","args","startNewGame","_hoisted_6","startGame"],"sources":["C:\\Users\\sherl\\Gato-Front\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <h1>Tic Tac Toe</h1>\r\n    <div class=\"board\">\r\n      <div v-for=\"(row, rowIndex) in board\" :key=\"rowIndex\" class=\"row\">\r\n        <div\r\n          v-for=\"(cell, colIndex) in row\"\r\n          :key=\"colIndex\"\r\n          class=\"cell\"\r\n          @click=\"makeMove(rowIndex, colIndex)\"\r\n        >\r\n          {{ cell }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"message\">\r\n      <p>{{ message }}</p>\r\n      <button @click=\"startNewGame\">Reiniciar</button>\r\n      <div style=\"margin-top: 10px\"></div>\r\n      <button @click=\"startGame\">Nuevo juego</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      board: [\r\n        [\"\", \"\", \"\"],\r\n        [\"\", \"\", \"\"],\r\n        [\"\", \"\", \"\"],\r\n      ],\r\n      currentPlayer: \"X\",\r\n      message: \"\",\r\n      apiBaseUrl: \"https://0h2kov0us3.execute-api.us-east-1.amazonaws.com/game\",\r\n      currentGameId: null,\r\n    };\r\n  },\r\n  methods: {\r\n    makeMove(row, col) {\r\n      if (\r\n        this.currentGameId &&\r\n        this.board[row][col] === \"\" &&\r\n        !this.isGameOver()\r\n      ) {\r\n        axios\r\n          .put(`${this.apiBaseUrl}/makeMove/${this.currentGameId}`, {\r\n            row,\r\n            col,\r\n          })\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              this.board[row][col] = this.currentPlayer;\r\n              if (this.checkWinner(row, col)) {\r\n                this.message = `¡El jugador ${this.currentPlayer} ha ganado!`;\r\n              } else if (this.isBoardFull()) {\r\n                this.message = \"¡Es un empate!\";\r\n              } else {\r\n                this.currentPlayer = this.currentPlayer === \"X\" ? \"O\" : \"X\";\r\n              }\r\n            } else {\r\n              console.error(response.data.error);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      }\r\n    },\r\n    startGame() {\r\n      axios\r\n        .put(`${this.apiBaseUrl}/?`)\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            // Debes asignar el ID del juego aquí\r\n            this.currentGameId = response.data.gameId;\r\n\r\n            this.board = [\r\n              [\"\", \"\", \"\"],\r\n              [\"\", \"\", \"\"],\r\n              [\"\", \"\", \"\"],\r\n            ];\r\n            this.currentPlayer = \"X\";\r\n            this.message = \"\";\r\n          } else {\r\n            console.error(\"Error al iniciar el juego\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    startNewGame() {\r\n      if (this.currentGameId) {\r\n        // Verifica que tengas un juego en curso\r\n        axios\r\n          .put(`${this.apiBaseUrl}/resetGame/${this.currentGameId}`)\r\n          .then((response) => {\r\n            if (response.data.success) {\r\n              // Reinicia el juego en el frontend\r\n              this.board = [\r\n                [\"\", \"\", \"\"],\r\n                [\"\", \"\", \"\"],\r\n                [\"\", \"\", \"\"],\r\n              ];\r\n              this.currentPlayer = \"X\";\r\n              this.message = \"\";\r\n            } else {\r\n              console.error(\"Error al reiniciar el juego\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n            // Agregar manejo de errores adicional según sea necesario\r\n          });\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#app {\r\n  text-align: center;\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  margin-top: 30px;\r\n}\r\n\r\n.board {\r\n  display: inline-block;\r\n  border: 2px solid #333;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n}\r\n\r\n.cell {\r\n  width: 100px;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 2em;\r\n  cursor: pointer;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.message {\r\n  margin-top: 20px;\r\n  font-size: 1.5em;\r\n}\r\n\r\nbutton {\r\n  font-size: 1em;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n  transition: background-color 0.3s ease; /* Agregado para efecto de transición */\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,EAAE,EAAC;AAAK;gEACXC,mBAAA,CAAoB,YAAhB,aAAW;;EACVC,KAAK,EAAC;AAAO;;;EAYbA,KAAK,EAAC;AAAS;gEAGlBD,mBAAA,CAAoC;EAA/BE,KAAwB,EAAxB;IAAA;EAAA;AAAwB;;;uBAjBjCC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,UAAoB,EACpBL,mBAAA,CAWM,OAXNM,UAWM,I,kBAVJH,mBAAA,CASMI,SAAA,QAAAC,WAAA,CATyBC,KAAA,CAAAC,KAAK,GAAvBC,GAAG,EAAEC,QAAQ;yBAA1BT,mBAAA,CASM;MATiCU,GAAG,EAAED,QAAQ;MAAEX,KAAK,EAAC;2BAC1DE,mBAAA,CAOMI,SAAA,QAAAC,WAAA,CANuBG,GAAG,GAAtBG,IAAI,EAAEC,QAAQ;2BADxBZ,mBAAA,CAOM;QALHU,GAAG,EAAEE,QAAQ;QACdd,KAAK,EAAC,MAAM;QACXe,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,QAAQ,CAACP,QAAQ,EAAEG,QAAQ;0BAEhCD,IAAI,wBAAAM,UAAA;;oCAIbpB,mBAAA,CAKM,OALNqB,UAKM,GAJJrB,mBAAA,CAAoB,WAAAsB,gBAAA,CAAdb,KAAA,CAAAc,OAAO,kBACbvB,mBAAA,CAAgD;IAAvCgB,OAAK,EAAAQ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,QAAA,CAAAQ,YAAA,IAAAR,QAAA,CAAAQ,YAAA,IAAAD,IAAA,CAAY;KAAE,WAAS,GACvCE,UAAoC,EACpC3B,mBAAA,CAA+C;IAAtCgB,OAAK,EAAAQ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,QAAA,CAAAU,SAAA,IAAAV,QAAA,CAAAU,SAAA,IAAAH,IAAA,CAAS;KAAE,aAAW,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}